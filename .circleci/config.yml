# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    # working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "frontend/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          command: |
            cd frontend
            npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "frontend/package.json" }}

      # run tests!
      - run:
          command: |
            cd frontend
            npm run test
  deploy:
    branches:
      ignore:
        - gh-pages
    docker:
      - image: circleci/node:7.10
    environment:
      - SOURCE_BRANCH: master
      - TARGET_BRANCH: gh-pages
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "frontend/package.json" }}
          - v1-dependencies-
      - run:
          command: |
            cd frontend
            npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "frontend/package.json" }}
      - deploy:
          command: |
            if [ $CIRCLE_BRANCH == $SOURCE_BRANCH ]; then
              git config --global user.email $GH_EMAIL
              git config --global user.name $GH_NAME

              git clone $CIRCLE_REPOSITORY_URL out

              cd out
              git checkout $TARGET_BRANCH || git checkout --orphan $TARGET_BRANCH
              git rm -rf .
              cd ..

              npm run build

              cp -a build/. out/.

              mkdir -p out/.circleci && cp -a .circleci/. out/.circleci/.
              cd out

              git add -A
              git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty

              git push origin $TARGET_BRANCH
            fi
